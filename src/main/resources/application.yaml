
security:
    user:
      password: none
    oauth2:
      client: 
        client-id: travelmanager-service
        client-secret: d9148d1d-45e1-4d86-8103-d54d5ee6068f
        access-token-uri: http://localhost:8280/auth/realms/Travelmanager/protocol/openid-connect/token
        user-authorization-uri: http://localhost:8280/auth/realms/Travelmanager/protocol/openid-connect/auth
      resource:
        jwt:
          keyValue: 
            -----BEGIN PUBLIC KEY-----
            MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiN3J5uoDpfuVS9/INFCPGGaX+Gy17fH4p+4DSxxHuoPegDrCadubZRGMau0OaG5Q0rJblrvq0PTR06Ik1QCBaEJSI+/wsiZrGO8U8tmxl/Xtij0+HRXGpotDud23RxaS2MTTH4pX2w/IUaeTVE8v0haVIFpXE9fKbsFPEvTBJbrIvds+bvi7lrdOt0AplsgezFwEgVDiD0FLF86pWPjhJ0ZFd5g3/yyx3tUCkKUeMBd4/lb2fr1MJ+0edI4kUd3l/LMueliY++ahlFJ+/la1rtyuIDtlYHayNrCu81xQyYFdDFZy+u5jzSEeydKMRQQL0RISXQhC6MiRRsgZvr47DwIDAQAB
            -----END PUBLIC KEY-----
          user-info-uri: http://localhost:8080/auth/realms/Travelmanager/protocol/openid-connect/userinfo
       

server.context-path: /travelmanager 
logging.level: DEBUG
test.value: true
server.port: 9020
kafka.topic: traveller

spring:
   kafka:
     consumer:
        bootstrap-servers: localhost:9092
        group-id: group_id
        auto-offset-reset: earliest
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
     producer:
        bootstrap-servers: localhost:9092
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: de.eicke.travelmanager.stream.TravelEventSerializer

---
spring:
  profiles: development

  data:
    mongodb:
      database: meineDatenbank
---
spring:
  profiles: test

  data:
    mongodb:
      database: testDB
  
---
spring:
  profiles: openshift

  data:
    mongodb:
      uri: ${MONGO_URL}
      database: meineProdDB
      
  